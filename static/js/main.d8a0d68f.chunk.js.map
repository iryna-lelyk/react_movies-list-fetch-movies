{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","React","memo","onAdd","useState","setQuery","isLoading","setIsLoading","foundMovie","setFoundMovie","hasError","setHasError","defaultImgUrl","useMemo","clearForm","useCallback","handleSubmit","event","a","preventDefault","newMovie","Title","Plot","Poster","imdbID","handleAdd","notNewMovie","some","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","addMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8a0d68f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=8dd4fc58';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import classNames from 'classnames';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = React.memo(({ onAdd, movies }) => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [hasError, setHasError] = useState(false);\n\n  const defaultImgUrl = useMemo(() => {\n    return 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }, []);\n\n  const clearForm = useCallback(() => {\n    setQuery('');\n    setFoundMovie(null);\n    setHasError(false);\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      setIsLoading(true);\n      setHasError(false);\n\n      const newMovie = await getMovie(query);\n\n      try {\n        if ('Error' in newMovie) {\n          setHasError(true);\n        } else {\n          const {\n            Title,\n            Plot,\n            Poster,\n            imdbID,\n          } = newMovie;\n\n          setFoundMovie({\n            title: Title,\n            description: Plot,\n            imgUrl: Poster === 'N/A'\n              ? defaultImgUrl\n              : Poster,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          });\n        }\n      } catch {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }, [query],\n  );\n\n  const handleAdd = useCallback(() => {\n    const notNewMovie = movies.some(movie => (\n      movie.imdbId === foundMovie?.imdbId));\n\n    if (foundMovie && !notNewMovie) {\n      onAdd(foundMovie);\n    }\n\n    clearForm();\n  }, [foundMovie, movies]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={event => {\n                setQuery(event.target.value);\n                setHasError(false);\n              }}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={!query}\n            >\n              {foundMovie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {foundMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {foundMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={foundMovie} />\n        </div>\n      )}\n    </>\n  );\n});\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    setMovies(prevMovies => [...prevMovies, movie]);\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}